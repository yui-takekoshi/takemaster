version: 0.2
 
phases:
  pre_build:
    commands:
      - echo Build environme0nt is TAKEKOSHI BUILD
      - echo Logging in to Amazon ECR...
#      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com
  # build:
  #   commands:
  #     - echo Build started on `date`
  #     - echo Building the Docker image...          
  #     - docker build -t $IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER .
  #     - echo docker tag $IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER
  #     - docker tag $IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER
  #     - docker tag $IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
  # post_build:
  #   commands:
  #     - echo Build completed on `date`
  #     - echo Pushing the Docker image...
  #     - echo $CODEBUILD_BUILD_NUMBER
  #     - echo docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER
  #     - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER
  #     - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:latest
  #     - printf '[{"name":"nginx-test","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER > imagedefinitions.json
      # - sed -i "s/ReplaceImageVersion/$IMAGE_REPO_NAME:$CODEBUILD_BUILD_NUMBER/" ./taskdef.json
#      - aws ecs describe-task-definition --task-definition $TASK_DEF_NAME | jq '.taskDefinition | del(.taskDefinitionArn, .status, .compatibilities, .requiresCompatibilities, .revision, .requiresAttributes, .registeredAt, .registeredBy)' | sed '/\"image\":/c \      \"image\":\ \"<IMAGE1_NAME>\",' > taskdef.json
      - aws ecs describe-task-definition --task-definition $TASK_DEF_NAME | jq '.taskDefinition | del(.taskDefinitionArn, .status, .compatibilities, .requiresCompatibilities, .revision, .requiresAttributes, .registeredAt, .registeredBy)'  > taskdef.json
      - cat taskdef.json
 
artifacts:
  files: 
#    - imagedefinitions.json
    - taskdef.json